     1                                  bits    64                                      ; x86-64 processor used
     2                                  global _i2hex, _i2oct, _i2bin, _i2quat, _i2dec
     3                                  extern _memcpy, _memcpy_reversed
     4                                  
     5                                  section .text
     6                                  ;------------------------------------------------
     7                                  ; _i2a - converting num from int to str format
     8                                  ;------------------------------------------------
     9                                  ; ENTRY:    rdx - int number to convert from
    10                                  ;           rsi - address of source buffer
    11                                  ;           cl - base of converting: 2^c
    12                                  ; EXIT:
    13                                  ; EXPECTS:  None
    14                                  ; DESTROYS: rax, rdx, r11
    15                                  ;------------------------------------------------
    16                                  _i2a:
    17 00000000 56                          push rsi
    18 00000001 57                          push rdi
    19                                  
    20 00000002 48BF-                       mov rdi, nums_buf
    20 00000004 [0000000000000000] 
    21                                  
    22 0000000C 41BB01000000                mov r11, 1
    23 00000012 49D3E3                      shl r11, cl
    24 00000015 49FFCB                      dec r11                 ; mask for % (mod 2^cl)
    25                                  
    26 00000018 FC                          cld
    27                                  .next_symbol:
    28 00000019 4889D0                      mov rax, rdx
    29 0000001C 4C21D8                      and rax, r11
    30 0000001F 8A80[00000000]              mov al, num_lttrs[rax]
    31 00000025 AA                          stosb                   ; es:[edi++] = al
    32 00000026 48D3EA                      shr rdx, cl             ; ebx /= 2^cl
    33 00000029 4883FA00                    cmp rdx, 0
    34 0000002D 75EA                        jne .next_symbol
    35                                  
    36 0000002F 4889F9                      mov rcx, rdi
    37 00000032 4881E9[00000000]            sub rcx, nums_buf       ; length of num in buf
    38 00000039 4889FE                      mov rsi, rdi
    39 0000003C 48FFCE                      dec rsi                 ; address of end of num buf
    40 0000003F 5F                          pop rdi                 ; restore rdi value
    41 00000040 E8(00000000)                call _memcpy_reversed
    42 00000045 5E                          pop rsi
    43 00000046 C3                          ret
    44                                  ;------------------------------------------------
    45                                  
    46                                  ;------------------------------------------------
    47                                  ; _i2dec - convers num from int to decimal str format
    48                                  ;------------------------------------------------
    49                                  ; ENTRY:    edx - int number to convert from
    50                                  ;           rsi - address of source buffer
    51                                  ; EXIT:
    52                                  ; EXPECTS:  None
    53                                  ; DESTROYS: rax, rdx, r9, r11
    54                                  ;------------------------------------------------
    55                                  _i2dec:
    56 00000047 56                          push rsi                ; saving pointer to fmt string
    57                                  
    58 00000048 83FA00                      cmp edx, 0
    59 0000004B 7D05                        jge .process_num
    60                                  
    61 0000004D B02D                        mov al, '-'
    62 0000004F AA                          stosb                   ; es:[edi++] = al
    63 00000050 F7DA                        neg edx
    64                                  
    65                                  .process_num:
    66 00000052 57                          push rdi
    67 00000053 41B90A000000                mov r9, 10              ; base of converting system
    68 00000059 4889D0                      mov rax, rdx            ; rdx = rax
    69 0000005C 48BF-                       mov rdi, nums_buf       ; address of nums buffer
    69 0000005E [0000000000000000] 
    70                                  
    71                                  .next_symbol:
    72 00000066 4831D2                      xor rdx, rdx            ; rdx = 0
    73 00000069 49F7F1                      div r9                  ; rax /= 10, rdx = rax % 10
    74 0000006C 80C230                      add dl, '0'             ; converting number to symbol
    75 0000006F 8817                        mov [rdi], dl
    76 00000071 48FFC7                      inc rdi
    77 00000074 4883F800                    cmp rax, 0
    78 00000078 75EC                        jne .next_symbol
    79                                  
    80                                  .cpy_buf:
    81 0000007A 4889F9                      mov rcx, rdi
    82 0000007D 4881E9[00000000]            sub rcx, nums_buf       ; length of num in buf
    83 00000084 4889FE                      mov rsi, rdi
    84 00000087 48FFCE                      dec rsi                 ; address of end of num buf
    85 0000008A 5F                          pop rdi                 ; restore pointer  to _printf buffer
    86 0000008B E8(00000000)                call _memcpy_reversed   ; copying num buffer to the end of _printf buffer
    87 00000090 5E                          pop rsi                 ; restoring pointer to fmt string
    88 00000091 C3                          ret
    89                                  ;------------------------------------------------
    90                                  
    91                                  ;------------------------------------------------
    92                                  ; _i2oct - convers num from int to octal str format
    93                                  ;------------------------------------------------
    94                                  ; ENTRY:    rdx - int number to convert from
    95                                  ;           rsi - address of source buffer
    96                                  ; EXIT:
    97                                  ; EXPECTS:  None
    98                                  ; DESTROYS: rax, rdx, r11
    99                                  ;------------------------------------------------
   100                                  _i2oct:
   101 00000092 B903000000                  mov rcx, 3      ; base = 2^3 = 8
   102 00000097 E864FFFFFF                  call _i2a       ; convert integer to str in oct system
   103 0000009C C3                          ret
   104                                  ;------------------------------------------------
   105                                  
   106                                  ;------------------------------------------------
   107                                  ; _i2bin - convers num from int to binar str format
   108                                  ;------------------------------------------------
   109                                  ; ENTRY:    rdx - int number to convert from
   110                                  ;           rsi - address of source buffer
   111                                  ; EXIT:
   112                                  ; EXPECTS:  None
   113                                  ; DESTROYS: rax, rdx, r11
   114                                  ;------------------------------------------------
   115                                  _i2bin:
   116 0000009D B901000000                  mov rcx, 1      ; base = 2^1 = 2
   117 000000A2 E859FFFFFF                  call _i2a       ; convert integer to str in bin system
   118 000000A7 C3                          ret
   119                                  ;------------------------------------------------
   120                                  
   121                                  ;------------------------------------------------
   122                                  ; _i2quat - convers num from int to quater str format
   123                                  ;------------------------------------------------
   124                                  ; ENTRY:    rdx - int number to convert from
   125                                  ;           rsi - address of source buffer
   126                                  ; EXIT:
   127                                  ; EXPECTS:  None
   128                                  ; DESTROYS: rax, rdx, r11
   129                                  ;------------------------------------------------
   130                                  _i2quat:
   131 000000A8 B902000000                  mov rcx, 2      ; base = 2^2 = 4
   132 000000AD E84EFFFFFF                  call _i2a       ; convert integer to str in quat system
   133 000000B2 C3                          ret
   134                                  ;------------------------------------------------
   135                                  
   136                                  ;------------------------------------------------
   137                                  ; _i2hex - convers num from int to hex str format
   138                                  ;------------------------------------------------
   139                                  ; ENTRY:    rdx - int number to convert from
   140                                  ;           rsi - address of source buffer
   141                                  ; EXIT:
   142                                  ; EXPECTS:  None
   143                                  ; DESTROYS: rax, rdx, r11
   144                                  ;------------------------------------------------
   145                                  _i2hex:
   146 000000B3 B904000000                  mov rcx, 4      ; base = 2^4 = 16
   147 000000B8 E843FFFFFF                  call _i2a       ; convert integer to str in hex system
   148 000000BD C3                          ret
   149                                  ;------------------------------------------------
   150                                  
   151                                  section .rodata
   152 00000000 303132333435363738-     num_lttrs:  db  "0123456789abcdef"
   152 00000009 39616263646566     
   153                                  
   154                                  section .bss
   155                                  nums_buf_size    equ 32             ; size of nums buffer
   156 00000000 <res 20h>               nums_buf resb    nums_buf_size      ; nums buffer
